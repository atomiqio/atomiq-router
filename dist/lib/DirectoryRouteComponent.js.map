{"version":3,"sources":["../../src/lib/DirectoryRouteComponent.js"],"names":[],"mappings":"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","file":"DirectoryRouteComponent.js","sourcesContent":["import { contains } from 'Ramda';\nimport fs from 'fs';\nimport path from 'path';\n\nconst ComponentFile = Symbol('ComponentFile');\nconst ComponentDirectory = Symbol('ComponentDirectory');\nconst ComponentParam = Symbol('ComponentParam');\nconst ComponentIgnored = Symbol('ComponentIgnored');\n\nexport default class DirectoryRouteComponent {\n\n  constructor(...paths) {\n    let parent;\n    if (paths && paths[0] instanceof DirectoryRouteComponent) {\n      parent = paths.shift();\n    }\n\n    this._parent = parent;\n    this._children = [];\n\n    // initialize with file path components\n    if (paths && paths.length) {\n      this.filepath = path.join(...paths);\n    }\n\n    [\n      'name',\n      'parentName',\n      'hasChildren',\n      'isIndex',\n      'isDirectory',\n      'isFile',\n      'isParam',\n      'isIgnored',\n      'filepath',\n      'dirname',\n      'filename',\n      'extname',\n      'basename'\n    ].forEach(prop => {\n      Object.defineProperty(DirectoryRouteComponent.prototype, prop, {\n        enumerable: true\n      });\n    });\n  }\n\n  set filepath(filepath) {\n    this._filepath = filepath;\n    let type = fs.statSync(filepath);\n\n    if (type.isDirectory()) {\n      // check if directory is wrapped in braces {dirname} (convention for indicating a route parameter)\n      this._componentType = /^{.*}$/.test(this.basename)\n        ? ComponentParam\n        : ComponentDirectory;\n    } else if (type.isFile()) {\n      this._componentType = this.extname == '.js'\n        ? ComponentFile\n        : ComponentIgnored;\n    } else {\n      this._componentType = ComponentIgnored;\n    }\n\n    // regardless of type, if it begins with an underscore, this component should be ignored\n    if (this.basename.startsWith('_')) {\n      this._componentType = ComponentIgnored;\n    }\n\n    // object is immutable after initialization - except for children!\n    Object.freeze(this);\n  }\n\n  createResource(app, options) {\n    if (!this._module) {\n      this._module = require(this.filepath).default;\n    }\n    return new this._module(app, options);\n  }\n\n  // not enumerable so no circular refs when stringifying\n  get parent() {\n    return this._parent;\n  }\n\n  get parentName() {\n    return this.parent ? this.parent.name : '';\n  }\n\n  get hasChildren() {\n    return Boolean(this.children.length);\n  }\n\n  get children() {\n    return this._children;\n  }\n\n  add(component) {\n    if (!component.isIgnored) {\n      this._children.push(component);\n    }\n  }\n\n  get isIndex() {\n    if (!this.isFile) {\n      return false;\n    }\n\n    let indexFileNames = [\n      'root',\n      'index',\n      path.basename(path.resolve(this.filepath, '..')).toLowerCase()\n    ];\n    return contains(this.name, indexFileNames);\n  }\n\n  // when building the route from path components, use `component`, not `name`, because this provides smart substitution\n  // route components are always converted to lowercase\n  // if you want the original directory basename, use `basename`\n  get name() {\n    return (this.isParam ? this.basename.replace(/^{(.*)}$/, ':$1') : this.basename).toLowerCase();\n  }\n\n  get componentType() {\n    return this._componentType;\n  }\n\n  get isDirectory() {\n    return this._componentType == ComponentDirectory;\n  }\n\n  get isFile() {\n    return this._componentType == ComponentFile;\n  }\n\n  get isParam() {\n    return this._componentType == ComponentParam;\n  }\n\n  get isIgnored() {\n    return this._componentType == ComponentIgnored;\n  }\n\n  get filepath() {\n    return this._filepath;\n  }\n\n  get dirname() {\n    return path.dirname(this._filepath);\n  }\n\n  get filename() {\n    return path.basename(this.filepath);\n  }\n\n  get basename() {\n    return path.basename(this.filename, '.js');\n  }\n\n  get extname() {\n    return path.extname(this.filepath);\n  }\n\n  inspect() {\n    let props = { };\n    Object.keys(Object.getPrototypeOf(this)).forEach(key => {\n      props[key] = this[key];\n    });\n    props.children = [];\n    if (this.hasChildren) {\n      this.children.forEach(child => {\n        props.children.push(child.inspect());\n      });\n    }\n    return props;\n  }\n}\n"]}